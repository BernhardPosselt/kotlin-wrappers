{
    "input": [
        "<nodeModules>/@types/node/async_hooks.d.ts",
        "<nodeModules>/@types/node/child_process.d.ts",
        "<nodeModules>/@types/node/buffer.d.ts",
        "<nodeModules>/@types/node/crypto.d.ts",
        "<nodeModules>/@types/node/dgram.d.ts",
        "<nodeModules>/@types/node/dns.d.ts",
        "<nodeModules>/@types/node/dns/promises.d.ts",
        "<nodeModules>/@types/node/events.d.ts",
        "<nodeModules>/@types/node/fs.d.ts",
        "<nodeModules>/@types/node/globals.d.ts",
        "<nodeModules>/@types/node/fs/promises.d.ts",
        "<nodeModules>/@types/node/http.d.ts",
        "<nodeModules>/@types/node/net.d.ts",
        "<nodeModules>/@types/node/os.d.ts",
        "<nodeModules>/@types/node/path.d.ts",
        "<nodeModules>/@types/node/perf_hooks.d.ts",
        "<nodeModules>/@types/node/process.d.ts",
        "<nodeModules>/@types/node/querystring.d.ts",
        "<nodeModules>/@types/node/readline.d.ts",
        "<nodeModules>/@types/node/readline/promises.d.ts",
        "<nodeModules>/@types/node/stream.d.ts",
        "<nodeModules>/@types/node/stream/promises.d.ts",
        "<nodeModules>/@types/node/tls.d.ts",
        "<nodeModules>/@types/node/tty.d.ts",
        "<nodeModules>/@types/node/url.d.ts",
        "<nodeModules>/@types/node/vm.d.ts",
        "<nodeModules>/@types/node/worker_threads.d.ts"
    ],
    "output": "src/jsMain/generated",
    "ignoreOutput": [
        "**/NodeRequire.kt",
        "**/NodeRequireResolve.kt",
        "**/NodeModule.kt",
        "**/Dict.kt",
        "**/ReadOnlyDict.kt",
        "**/AbortController.kt",
        "**/AbortSignal.kt",
        "**/Array.kt",
        "**/ReadonlyArray.kt",
        "**/String.kt",
        "**/structuredClone.kt",
        "**/ArrayBufferView.kt",
        "**/TypedArray.kt",
        "**/Uint8ClampedArray.kt",
        "**/*8Array.kt",
        "**/*16Array.kt",
        "**/*32Array.kt",
        "**/*64Array.kt",
        "**/__promisify__.kt",
        "**/__promisify__*.kt",
        "**/childProcess/exec/**",
        "**/childProcess/execfile/**",
        "**/buffer/atob.kt",
        "**/buffer/btoa.kt",
        "**/buffer/__Blob.kt",
        "**/buffer/Blob.kt",
        "**/buffer/BlobOptions.kt",
        "**/buffer/File.kt",
        "**/buffer/FileOptions.kt",
        "**/buffer/FileOptionsEndings.kt",
        "**/crypto/generatekeypair/**",
        "**/crypto/webcrypto/**",
        "**/dns/lookupservice/**",
        "**/dns/resolve/**",
        "**/dns/Resolver.kt",
        "**/dns/getServersAsync.kt",
        "**/dns/setDefaultResultOrderAsync.kt",
        "**/dns/SetDefaultResultOrderOrderAsync.kt",
        "**/dns/setServersAsync.kt",
        "**/events/global/nodejs/EventEmitter.kt",
        "**/path/namespace.kt",
        "**/path/PlatformPathDelimiter.kt",
        "**/path/PlatformPathSep.kt",
        "**/path/posix/**",
        "**/path/win32/**",
        "**/perfHooks/global/namespace.kt",
        "**/process/global/namespace.kt",
        "**/readline/createInterface.kt",
        "**/stream/internal.kt",
        "**/url/global/**",
        "**/url/URL.kt",
        "**/url/URLSearchParams.kt",
        "**/workerThreads/global/namespace.kt",
        "**/workerThreads/BroadcastChannel.kt",
        "**/workerThreads/MessageChannel.kt",
        "**/workerThreads/MessagePort.kt"
    ],
    "libraryName": "node",
    "libraryNameOutputPrefix": true,
    "granularity": "top-level",
    "moduleNameMapper": {
        "^node/async_hooks": "node:async_hooks",
        "^async_hooks": "node:async_hooks",
        "^node/child_process": "node:child_process",
        "^child_process": "node:child_process",
        "^node/buffer": "node:buffer",
        "^buffer": "node:buffer",
        "^node/crypto": "node:crypto",
        "^crypto": "node:crypto",
        "^node/dgram": "node:dgram",
        "^dgram": "node:dgram",
        "^node/dns": "node:dns",
        "^dns": "node:dns",
        "^node/events": "node:events",
        "^events": "node:events",
        "^node/fs": "node:fs",
        "^fs": "node:fs",
        "^node/http": "node:http",
        "^http": "node:http",
        "^node/net": "node:net",
        "^net": "node:net",
        "^node/os": "node:os",
        "^os": "node:os",
        "^node/path": "node:path",
        "^path": "node:path",
        "^node/perf_hooks": "node:perf_hooks",
        "^perf_hooks": "node:perf_hooks",
        "^node/process": "node:process",
        "^process": "node:process",
        "^node/querystring": "node:querystring",
        "^querystring": "node:querystring",
        "^node/readline": "node:readline",
        "^readline": "node:readline",
        "^node/stream": "node:stream",
        "^stream#internal": "node:stream",
        "^stream": "node:stream",
        "^node/tls": "node:tls",
        "^tls": "node:tls",
        "^node/tty": "node:tty",
        "^tty": "node:tty",
        "^node/url": "node:url",
        "^url": "node:url",
        "^node/vm": "node:vm",
        "^vm": "node:vm",
        "^node/worker_threads": "node:worker_threads",
        "^worker_threads": "node:worker_threads"
    },
    "packageNameMapper": {
        "promises/(.+)\\.kt": "$1Async.kt",
        "SuspendAsync.kt": "Suspend.kt",
        "AsyncOptionsAsync.kt": "OptionsAsync.kt",
        "^node/RequireResolve.kt": "node/NodeRequireResolve.kt",
        "^nodejs": "node",
        "^node/async_hooks/namespace.kt": "node/asyncHooks/nodeNamespace.kt",
        "^node/asyncHooks.kt": "node/asyncHooks/asyncHooks.kt",
        "^async_hooks": "node/asyncHooks",
        "^node/child_process/namespace.kt": "node/childProcess/nodeNamespace.kt",
        "^node/childProcess.kt": "node/childProcess/childProcessNamespace.kt",
        "^child_process": "node/childProcess",
        "^node/buffer/namespace.kt": "node/buffer/nodeNamespace.kt",
        "^node/buffer/global/namespace.kt": "node/buffer/nodeGlobalNamespace.kt",
        "^node/buffer.kt": "node/buffer/bufferModule.kt",
        "^buffer/global/namespace.kt": "node/buffer/globalNamespace.kt",
        "^buffer": "node/buffer",
        "buffer/global/(.+)\\.kt": "buffer/$1.kt",
        "^node/crypto/namespace.kt": "node/crypto/nodeNamespace.kt",
        "^node/crypto.kt": "node/crypto/crypto.kt",
        "^crypto": "node/crypto",
        "crypto/sign.kt": "crypto/sign.fun.kt",
        "crypto/verify.kt": "crypto/verify.fun.kt",
        "crypto/diffieHellman.kt": "crypto/diffieHellman.fun.kt",
        "^node/dgram/namespace.kt": "node/dgram/nodeNamespace.kt",
        "^node/dgram.kt": "node/dgram/dgram.kt",
        "^dgram": "node/dgram",
        "^node/dns/namespace.kt": "node/dns/nodeNamespace.kt",
        "^node/dns.kt": "node/dns/dns.kt",
        "^dns": "node/dns",
        "^node/events/namespace.kt": "node/events/nodeNamespace.kt",
        "^node/events.kt": "node/events/events.kt",
        "^events/eventemitter/namespace.kt": "node/events/eventEmitterNamespace.kt",
        "^events": "node/events",
        "events/eventemitter/Abortable.kt": "events/Abortable.kt",
        "^node/fs/namespace.kt": "node/fs/nodeNamespace.kt",
        "^node/fs.kt": "node/fs/fs.kt",
        "^fs": "node/fs",
        "fs/StatfsOptions.kt": "fs/StatfsOptions.fun.kt",
        "fs/realpathsync/native.kt": "fs/realpathSync/native.kt",
        "fs/symlink/Type.kt": "fs/SymlinkType.kt",
        "^node/http/namespace.kt": "node/http/nodeNamespace.kt",
        "^node/http.kt": "node/http/http.kt",
        "^http": "node/http",
        "^node/net/namespace.kt": "node/net/nodeNamespace.kt",
        "^node/net.kt": "node/net/net.kt",
        "^net": "node/net",
        "^node/os/namespace.kt": "node/os/nodeNamespace.kt",
        "^node/os.kt": "node/os/os.kt",
        "^os": "node/os",
        "os/userInfo.kt": "os/userInfo.fun.kt",
        "^node/path/namespace.kt": "node/path/nodeNamespace.kt",
        "^node/path.kt": "node/path/path.kt",
        "^path/path": "node/path",
        "^path": "node/path",
        "^node/perf_hooks/namespace.kt": "node/perfHooks/nodeNamespace.kt",
        "^node/perfHooks.kt": "node/perfHooks/perfHooks.kt",
        "^perf_hooks": "node/perfHooks",
        "^node/process/namespace.kt": "node/process/nodeNamespace.kt",
        "^node/process.kt": "node/process/process.kt",
        "^process": "node/process",
        "process/global/nodejs/(.+)\\.kt": "process/$1.kt",
        "process/Process.kt": "process/Process.interface.kt",
        "^node/querystring/namespace.kt": "node/querystring/nodeNamespace.kt",
        "^node/querystring.kt": "node/querystring/querystring.kt",
        "^querystring": "node/querystring",
        "^node/readline/namespace.kt": "node/readline/nodeNamespace.kt",
        "^node/readline.kt": "node/readline/readlineNamespace.kt",
        "^readline": "node/readline",
        "^node/stream/namespace.kt": "node/stream/nodeNamespace.kt",
        "^node/stream.kt": "node/stream/streamNamespace.kt",
        "^stream": "node/stream",
        "stream/internal/namespace.kt": "stream/internalNamespace.kt",
        "stream/internal/(.+)\\.kt": "stream/$1.kt",
        "^node/tls/namespace.kt": "node/tls/nodeNamespace.kt",
        "^node/tls.kt": "node/tls/tls.kt",
        "^tls": "node/tls",
        "^node/tty/namespace.kt": "node/tty/nodeNamespace.kt",
        "^node/tty.kt": "node/tty/tty.kt",
        "^tty": "node/tty",
        "^node/url/namespace.kt": "node/url/nodeNamespace.kt",
        "^node/url.kt": "node/url/url.kt",
        "^url": "node/url",
        "url/Url.kt": "url/Url.interface.kt",
        "^node/vm/namespace.kt": "node/vm/nodeNamespace.kt",
        "^node/vm.kt": "node/vm/vm.kt",
        "^vm": "node/vm",
        "^node/worker_threads/namespace.kt": "node/workerThreads/nodeNamespace.kt",
        "^node/workerThreads.kt": "node/workerThreads/workerThreads.kt",
        "^worker_threads": "node/workerThreads"
    },
    "importInjector": {
        "Async.kt": [
            "js.promise.Promise"
        ],
        "Suspend.kt": [
            "js.promise.await"
        ],
        "ReadableStream.kt": [
            "js.typedarrays.Uint8Array",
            "node.events.EventEmitter"
        ],
        "Require.kt": [
            "node.Module",
            "node.Module as NodeModule"
        ],
        "WritableStream.kt": [
            "js.typedarrays.Uint8Array",
            "node.events.EventEmitter"
        ],
        "buffer/Buffer.kt": [
            "js.buffer.ArrayBuffer",
            "js.buffer.SharedArrayBuffer",
            "js.array.ReadonlyArray",
            "js.typedarrays.Uint8Array"
        ],
        "buffer/File.kt": [
            "web.buffer.Blob"
        ],
        "buffer/isAscii.kt": [
            "js.buffer.ArrayBuffer"
        ],
        "buffer/isUtf8.kt": [
            "js.buffer.ArrayBuffer"
        ],
        "buffer/resolveObjectURL.kt": [
            "web.buffer.Blob"
        ],
        "buffer/transcode.kt": [
            "js.typedarrays.Uint8Array"
        ],
        "childProcess/ChildProcess.kt": [
            "node.events.EventEmitter",
            "node.stream.Pipe",
            "node.stream.Readable",
            "node.stream.Writable"
        ],
        "childProcess/ChildProcessByStdio.kt": [
            "node.stream.Readable",
            "node.stream.Writable"
        ],
        "childProcess/ChildProcessWithoutNullStreams.kt": [
            "node.stream.Readable",
            "node.stream.Writable"
        ],
        "childProcess/CommonSpawnOptions.kt": [
            "node.events.Abortable"
        ],
        "childProcess/ExecFileOptions.kt": [
            "node.events.Abortable",
            "web.abort.AbortSignal"
        ],
        "childProcess/ExecOptions.kt": [
            "web.abort.AbortSignal"
        ],
        "childProcess/ForkOptions.kt": [
            "node.events.Abortable"
        ],
        "childProcess/MessagingOptions.kt": [
            "node.events.Abortable"
        ],
        "childProcess/ExecFileObjectEncodingOptions.kt": [
            "node.fs.ObjectEncodingOptions"
        ],
        "childProcess/ExecObjectEncodingOptions.kt": [
            "node.fs.ObjectEncodingOptions"
        ],
        "childProcess/PromiseWithChild.kt": [
            "js.promise.Promise"
        ],
        "childProcess/execFile.kt": [
            "js.array.ReadonlyArray"
        ],
        "childProcess/execFileSync.kt": [
            "js.array.ReadonlyArray"
        ],
        "childProcess/fork.kt": [
            "js.array.ReadonlyArray"
        ],
        "childProcess/spawn.kt": [
            "js.array.ReadonlyArray",
            "node.stream.Readable",
            "node.stream.Writable"
        ],
        "childProcess/spawnSync.kt": [
            "js.array.ReadonlyArray"
        ],
        "crypto/Cipher.kt": [
            "node.stream.TransformOptions"
        ],
        "crypto/Decipher.kt": [
            "node.stream.TransformOptions"
        ],
        "crypto/Hash.kt": [
            "node.stream.TransformOptions"
        ],
        "crypto/Hmac.kt": [
            "node.stream.TransformOptions"
        ],
        "crypto/Sign.kt": [
            "node.stream.WritableOptions"
        ],
        "crypto/Verify.kt": [
            "node.stream.WritableOptions"
        ],
        "crypto/X509Certificate.kt": [
            "node.tls.PeerCertificate"
        ],
        "crypto/createDiffieHellman.kt": [
            "js.buffer.ArrayBuffer"
        ],
        "crypto/generatePrime.kt": [
            "js.buffer.ArrayBuffer"
        ],
        "crypto/generatePrimeSync.kt": [
            "js.buffer.ArrayBuffer"
        ],
        "crypto/hkdf.kt": [
            "js.buffer.ArrayBuffer"
        ],
        "crypto/hkdfSync.kt": [
            "js.buffer.ArrayBuffer"
        ],
        "dgram/Socket.kt": [
            "js.array.ReadonlyArray",
            "js.typedarrays.Uint8Array",
            "node.events.EventEmitter",
            "node.net.AddressInfo"
        ],
        "dgram/SocketOptions.kt": [
            "node.events.Abortable"
        ],
        "dns/setServers.kt": [
            "js.array.ReadonlyArray"
        ],
        "dns/ResolverAsync.kt": [
            "js.promise.await"
        ],
        "events/Abortable.kt": [
            "web.abort.AbortSignal"
        ],
        "events/EventEmitter.kt": [
            "js.iterable.AsyncIterableIterator",
            "js.promise.Promise"
        ],
        "events/StaticEventEmitterOptions.kt": [
            "web.abort.AbortSignal"
        ],
        "fs/Dir.kt": [
            "js.iterable.AsyncIterable",
            "js.promise.Promise"
        ],
        "fs/FileHandleAsync.kt": [
            "js.array.ReadonlyArray",
            "js.promise.await",
            "js.typedarrays.Uint8Array",
            "web.streams.ReadableStream",
            "node.readline.Interface as ReadlineInterface"
        ],
        "fs/FileHandleWriteFileOptionsAsync.kt": [
            "node.events.Abortable"
        ],
        "fs/FileHandleWriteResultPayloadAsync.kt": [
            "js.typedarrays.Uint8Array"
        ],
        "fs/FSWatcher.kt": [
            "node.events.EventEmitter"
        ],
        "fs/ReadFileOptions.kt": [
            "node.events.Abortable"
        ],
        "fs/ReadFileOptionsAsync.kt": [
            "node.events.Abortable"
        ],
        "fs/ReadFileBufferOptions.kt": [
            "node.events.Abortable"
        ],
        "fs/ReadFileBufferOptionsAsync.kt": [
            "node.events.Abortable"
        ],
        "fs/ReadFileStringOptions.kt": [
            "node.events.Abortable"
        ],
        "fs/ReadFileStringOptionsAsync.kt": [
            "node.events.Abortable"
        ],
        "fs/ReadStream.kt": [
            "node.stream.ReadableOptions"
        ],
        "fs/StatsBase.kt": [
            "kotlin.js.Date"
        ],
        "fs/StatWatcher.kt": [
            "node.events.EventEmitter"
        ],
        "fs/WatchOptions.kt": [
            "node.events.Abortable"
        ],
        "fs/WriteStream.kt": [
            "node.stream.WritableOptions"
        ],
        "fs/appendFile.kt": [
            "js.typedarrays.Uint8Array"
        ],
        "fs/appendFileAsync.kt": [
            "js.typedarrays.Uint8Array"
        ],
        "fs/appendFileSync.kt": [
            "js.typedarrays.Uint8Array"
        ],
        "fs/appendFileSuspend.kt": [
            "js.typedarrays.Uint8Array"
        ],
        "fs/cp.kt": [
            "web.url.URL"
        ],
        "fs/cpAsync.kt": [
            "web.url.URL"
        ],
        "fs/cpSync.kt": [
            "web.url.URL"
        ],
        "fs/cpSuspend.kt": [
            "web.url.URL"
        ],
        "fs/readv.kt": [
            "js.array.ReadonlyArray"
        ],
        "fs/readvSync.kt": [
            "js.array.ReadonlyArray"
        ],
        "fs/realpath/native.kt": [
            "node.fs.BufferEncodingOption",
            "node.fs.EncodingOption",
            "node.fs.PathLike"
        ],
        "fs/realpathSync/native.kt": [
            "node.fs.BufferEncodingOption",
            "node.fs.EncodingOption",
            "node.fs.PathLike"
        ],
        "fs/watchAsync.kt": [
            "js.iterable.AsyncIterable"
        ],
        "fs/writeFileAsync.kt": [
            "js.iterable.AsyncIterable",
            "node.stream.Stream"
        ],
        "fs/writeFileSuspend.kt": [
            "js.iterable.AsyncIterable",
            "node.stream.Stream"
        ],
        "fs/WriteFileOptionsAsync.kt": [
            "node.events.Abortable"
        ],
        "fs/writev.kt": [
            "js.array.ReadonlyArray"
        ],
        "fs/writevSync.kt": [
            "js.array.ReadonlyArray"
        ],
        "http/Agent.kt": [
            "node.events.EventEmitter",
            "node.net.Socket"
        ],
        "http/AgentOptions.kt": [
            "node.net.TcpSocketConnectOpts"
        ],
        "http/ClientRequest.kt": [
            "web.url.URL",
            "node.net.Socket"
        ],
        "http/ClientRequestArgs.kt": [
            "web.abort.AbortSignal",
            "web.url.URL",
            "node.net.Socket",
            "node.net.LookupFunction"
        ],
        "http/IncomingMessage.kt": [
            "node.net.Socket"
        ],
        "http/OutgoingMessage.kt": [
            "js.array.ReadonlyArray",
            "node.net.Socket"
        ],
        "http/Server.kt": [
            "node.net.Server as NetServer",
            "node.net.Socket"
        ],
        "http/ServerResponse.kt": [
            "node.net.Socket"
        ],
        "http/get.kt": [
            "web.url.URL"
        ],
        "http/request.kt": [
            "web.url.URL"
        ],
        "net/ListenOptions.kt": [
            "node.events.Abortable"
        ],
        "net/OnReadOpts.kt": [
            "js.typedarrays.Uint8Array"
        ],
        "net/Server.kt": [
            "node.events.EventEmitter"
        ],
        "net/Socket.kt": [
            "js.typedarrays.Uint8Array"
        ],
        "net/SocketConstructorOpts.kt": [
            "web.abort.AbortSignal"
        ],
        "os/constants/namespace.kt": [
            "node.os.SignalConstants"
        ],
        "perfHooks/PerformanceObserver.kt": [
            "node.asyncHooks.AsyncResource"
        ],
        "perfHooks/PerformanceObserverObserveTypesOptions.kt": [
            "js.array.ReadonlyArray"
        ],
        "process/MultipleResolveListener.kt": [
            "js.promise.Promise"
        ],
        "process/Process.interface.kt": [
            "js.array.ReadonlyArray",
            "js.collections.ReadonlySet",
            "js.promise.Promise",
            "node.Module",
            "node.events.EventEmitter"
        ],
        "process/ProcessEnv.kt": [
            "node.Dict"
        ],
        "process/ProcessVersions.kt": [
            "node.Dict"
        ],
        "process/RejectionHandledListener.kt": [
            "js.promise.Promise"
        ],
        "process/Socket.kt": [
            "node.ReadWriteStream"
        ],
        "process/UnhandledRejectionListener.kt": [
            "js.promise.Promise"
        ],
        "process/WorkerListener.kt": [
            "node.workerThreads.Worker"
        ],
        "readline/Interface.kt": [
            "node.events.EventEmitter",
            "node.events.Abortable"
        ],
        "readline/InterfaceAsync.kt": [
            "js.promise.await",
            "node.events.Abortable"
        ],
        "readline/ReadlineAsync.kt": [
            "js.promise.await"
        ],
        "stream/addAbortSignal.kt": [
            "web.abort.AbortSignal"
        ],
        "stream/Duplex.kt": [
            "js.buffer.ArrayBuffer",
            "js.iterable.AsyncIterable",
            "js.generator.AsyncGeneratorFunction",
            "js.promise.Promise",
            "web.buffer.Blob as NodeBlob"
        ],
        "stream/FinishedOptions.kt": [
            "node.events.Abortable"
        ],
        "stream/pipeline.kt": [
            "js.array.ReadonlyArray"
        ],
        "stream/pipelineAsync.kt": [
            "js.array.ReadonlyArray"
        ],
        "stream/PipelineDestinationIterableFunction.kt": [
            "js.iterable.AsyncIterable"
        ],
        "stream/PipelineDestinationPromiseFunction.kt": [
            "js.promise.Promise",
            "js.iterable.AsyncIterable"
        ],
        "stream/PipelineOptions.kt": [
            "web.abort.AbortSignal"
        ],
        "stream/pipelineSuspend.kt": [
            "js.array.ReadonlyArray"
        ],
        "stream/Readable.kt": [
            "js.typedarrays.Uint8Array",
            "js.iterable.AsyncIterable",
            "node.ReadableStreamPipeOptions",
            "node.WritableStream"
        ],
        "stream/StreamOptions.kt": [
            "node.events.Abortable"
        ],
        "stream/Stream.kt": [
            "node.events.EventEmitter"
        ],
        "stream/Writable.kt": [
            "node.events.EventEmitter",
            "js.typedarrays.Uint8Array"
        ],
        "tls/TLSSocket.kt": [
            "node.crypto.X509Certificate"
        ],
        "tls/namespace.kt": [
            "js.array.ReadonlyArray"
        ],
        "url/fileURLToPath.kt": [
            "web.url.URL"
        ],
        "url/format.kt": [
            "web.url.URL"
        ],
        "url/pathToFileURL.kt":  [
            "web.url.URL"
        ],
        "url/urlToHttpOptions.kt": [
            "web.url.URL",
            "node.http.ClientRequestArgs"
        ],
        "url/UrlWithParsedQuery.kt": [
            "node.querystring.ParsedUrlQuery"
        ],
        "vm/CompileFunctionResult.kt": [
            "node.buffer.Buffer"
        ],
        "vm/Module.kt": [
            "js.promise.Promise"
        ],
        "vm/SourceTextModuleOptions.kt": [
            "js.import.ImportMeta"
        ],
        "vm/compileFunction.kt": [
            "js.core.ReadonlyArray"
        ],
        "vm/measureMemory.kt": [
            "js.promise.Promise"
        ],
        "workerThreads/Worker.kt": [
            "js.array.ReadonlyArray",
            "js.promise.Promise",
            "web.url.URL",
            "node.events.EventEmitter",
            "node.stream.Readable",
            "node.stream.Writable"
        ],
        "workerThreads/WorkerPerformance.kt": [
            "node.perfHooks.EventLoopUtilityFunction"
        ],
        "workerThreads/moveMessagePortToContext.kt": [
            "web.messaging.MessagePort",
            "node.vm.Context"
        ],
        "workerThreads/namespace.kt": [
            "web.messaging.MessagePort"
        ],
        "workerThreads/receiveMessageOnPort.kt": [
            "web.messaging.MessagePort"
        ]
    },
    "namespaceStrategy": {
        "NodeJS": "package",
        "async_hooks": "package",
        "node:async_hooks": "ignore",
        "child_process": "package",
        "node:child_process": "ignore",
        "buffer": "package",
        "node:buffer": "ignore",
        "crypto": "package",
        "node:crypto": "ignore",
        "dgram": "package",
        "node:dgram": "ignore",
        "dns": "package",
        "node:dns": "ignore",
        "events": "package",
        "node:events": "ignore",
        "fs": "package",
        "node:fs": "ignore",
        "http": "package",
        "node:http": "ignore",
        "net": "package",
        "node:net": "ignore",
        "os": "package",
        "node:os": "ignore",
        "path": "package",
        "node:path": "ignore",
        "perf_hooks": "package",
        "node:perf_hooks": "ignore",
        "process": "package",
        "node:process": "ignore",
        "querystring": "package",
        "node:querystring": "ignore",
        "readline": "package",
        "node:readline": "ignore",
        "stream": "package",
        "node:stream": "ignore",
        "tls": "package",
        "node:tls": "ignore",
        "tty": "package",
        "node:tty": "ignore",
        "url": "package",
        "node:url": "ignore",
        "vm": "package",
        "node:vm": "ignore",
        "worker_threads": "package",
        "node:worker_threads": "ignore"
    },
    "conflictResolutionStrategy": {
        "LookupServiceResultPayload": "replace",
        "AppendFileOptionsAsync": "replace",
        "WriteFileOptionsAsync": "replace",
        "LstatBigIntOptsAsync": "replace",
        "LstatOptsAsync": "replace",
        "MkdirOptionsAsync.kt": "replace",
        "MkdirRecursiveOptionsAsync.kt": "replace",
        "ReadFileOptionsAsync.kt": "replace",
        "ReadFileBufferOptionsAsync.kt": "replace",
        "ReadFileStringOptionsAsync.kt": "replace",
        "ReaddirBufferOptionsAsync.kt": "replace",
        "ReaddirOptionsAsync.kt": "replace",
        "ReaddirWithFileTypesOptionsAsync.kt": "replace",
        "StatBigIntOptsAsync.kt": "replace",
        "StatSimpleOptsAsync.kt": "replace",
        "StatfsBigIntOptsAsync.kt": "replace",
        "StatfsOptsAsync.kt": "replace",
        "FileHandleStatOptsAsync.kt": "replace",
        "FileHandleWriteResultPayloadAsync.kt": "replace",
        "FileHandleWriteStringResultPayloadAsync.kt": "replace",
        "ExecStringOptions.kt": "replace",
        "ExecFileObjectEncodingOptions.kt": "replace",
        "ReadableStreamPipeOptions": "replace",
        "WritableWritevChunksItem": "replace",
        "WritableOptionsWritevChunksItem": "replace"
    },
    "compilerOptions": {
        "types": [
            "@types/node"
        ]
    }
}
