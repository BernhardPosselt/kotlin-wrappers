// Generated by Karakum - do not modify it manually!

package node.assert

import js.promise.Promise
import js.promise.await


suspend fun doesNotReject(block: () -> Promise<Any?>, message: String = undefined.unsafeCast<Nothing>()): Unit =
    doesNotRejectAsync(
        block, message
    ).await()


suspend fun doesNotReject(
    block: () -> Promise<Any?>,
    message: Throwable /* JsError */ = undefined.unsafeCast<Nothing>(),
): Unit =
    doesNotRejectAsync(
        block, message
    ).await()


suspend fun doesNotReject(block: Promise<Any?>, message: String = undefined.unsafeCast<Nothing>()): Unit =
    doesNotRejectAsync(
        block, message
    ).await()


suspend fun doesNotReject(
    block: Promise<Any?>,
    message: Throwable /* JsError */ = undefined.unsafeCast<Nothing>(),
): Unit =
    doesNotRejectAsync(
        block, message
    ).await()


suspend fun doesNotReject(
    block: () -> Promise<Any?>,
    error: AssertPredicate,
    message: String = undefined.unsafeCast<Nothing>(),
): Unit =
    doesNotRejectAsync(
        block, error, message
    ).await()


suspend fun doesNotReject(
    block: () -> Promise<Any?>,
    error: AssertPredicate,
    message: Throwable /* JsError */ = undefined.unsafeCast<Nothing>(),
): Unit =
    doesNotRejectAsync(
        block, error, message
    ).await()


suspend fun doesNotReject(
    block: Promise<Any?>,
    error: AssertPredicate,
    message: String = undefined.unsafeCast<Nothing>(),
): Unit =
    doesNotRejectAsync(
        block, error, message
    ).await()


suspend fun doesNotReject(
    block: Promise<Any?>,
    error: AssertPredicate,
    message: Throwable /* JsError */ = undefined.unsafeCast<Nothing>(),
): Unit =
    doesNotRejectAsync(
        block, error, message
    ).await()
