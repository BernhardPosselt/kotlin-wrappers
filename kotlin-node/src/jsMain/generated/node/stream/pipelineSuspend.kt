// Generated by Karakum - do not modify it manually!

package node.stream

import js.core.ReadonlyArray
import js.promise.await


suspend fun pipeline(
    streams: ReadonlyArray<Any /* NodeJS.ReadableStream | NodeJS.WritableStream | NodeJS.ReadWriteStream */>,
    options: PipelineOptions = undefined.unsafeCast<Nothing>(),
): Unit =
    pipelineAsync(
        streams, options
    ).await()


suspend fun pipeline(
    stream1: node.ReadableStream,
    stream2: node.ReadWriteStream,
    vararg streams: Any, /* NodeJS.ReadWriteStream | NodeJS.WritableStream | PipelineOptions */
): Unit =
    pipelineAsync(
        stream1, stream2, streams
    ).await()


suspend fun pipeline(
    stream1: node.ReadableStream,
    stream2: node.WritableStream,
    vararg streams: Any, /* NodeJS.ReadWriteStream | NodeJS.WritableStream | PipelineOptions */
): Unit =
    pipelineAsync(
        stream1, stream2, streams
    ).await()
