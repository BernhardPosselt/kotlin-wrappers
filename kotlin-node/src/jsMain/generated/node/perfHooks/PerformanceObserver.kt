// Generated by Karakum - do not modify it manually!

@file:JsModule("node:perf_hooks")

package node.perfHooks

import node.asyncHooks.AsyncResource


external class PerformanceObserver : AsyncResource {
    constructor (callback: PerformanceObserverCallback)

    /**
     * Disconnects the `PerformanceObserver` instance from all notifications.
     * @since v8.5.0
     */
    fun disconnect(): Unit

    /**
     * Subscribes the `PerformanceObserver` instance to notifications of new `PerformanceEntry` instances identified either by `options.entryTypes`or `options.type`:
     *
     * ```js
     * const {
     *   performance,
     *   PerformanceObserver
     * } = require('perf_hooks');
     *
     * const obs = new PerformanceObserver((list, observer) => {
     *   // Called once asynchronously. `list` contains three items.
     * });
     * obs.observe({ type: 'mark' });
     *
     * for (let n = 0; n < 3; n++)
     *   performance.mark(`test${n}`);
     * ```
     * @since v8.5.0
     */
    fun observe(options: PerformanceObserverObserveTypesOptions): Unit

    fun observe(options: PerformanceObserverObserveTypeOptions): Unit
}
